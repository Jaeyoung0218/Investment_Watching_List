import pandas as pd
import requests
from bs4 import BeautifulSoup


def get_stock_price(code, pages):
    """
    주가 데이터를 가져오는 함수입니다.

    :param code: 종목 코드
    :param pages: 페이지 수
    :return: 주가 데이터 DataFrame
    """

    url = f'https://finance.naver.com/item/sise_day.naver?code={code}'
    headers = {'User-Agent': 'Mozilla/5.0'}

    df = pd.DataFrame()
    for page in range(1, pages + 1):
        response = requests.get(f'{url}&page={page}', headers=headers)

        if response.status_code == 200:
            html = response.text
            bs = BeautifulSoup(html, 'lxml')
            pgrr = bs.find('td', class_='pgRR')

            if pgrr:
                s = pgrr.a['href'].split('=')
                last_page = s[-1]

                df = df.append(pd.read_html(html, header=0)[0])
            else:
                print(f"Failed to retrieve data for page {page}")

    df['날짜'] = pd.to_datetime(df['날짜'])
    df.dropna(inplace=True)
    df.reset_index(drop=True, inplace=True)
    return df


def main():
    """
    main 함수입니다.
    """

    df = get_stock_price('389500', 10)
    df.to_excel('Watching_list.xlsx', index=False)


if __name__ == '__main__':
    main()



'''
-------------------------------------------------------------------------
if response.status_code == 200: 블록을 if response.status_code == 200 and pgrr: 
 블록으로 변경하여 pgrr 요소가 존재하는지 확인합니다.
for page in range(1, int(last_page)+1): 
 블록을 for page in range(1, pages + 1): 블록으로 변경하여 반복 횟수를
 pages 변수로 지정합니다.
df = pd.DataFrame() 명령어를 df = pd.DataFrame() 명령어로 변경하여 df
 변수를 초기화합니다.
df = df.append(pd.read_html(html, encoding = 'euc-kr')[0], ignore_index = True) 
 명령어를 df = df.append(pd.read_html(html, header=0)[0], ignore_index=True)
 명령어로 변경하여 열 이름을 자동으로 지정합니다.
df.dropna(inplace = True) 명령어를 df.dropna(inplace=True) 명령어로 변경하여
 inplace 인수를 True로 지정하여 데이터가 없는 행을 제거합니다.
df.reset_index(drop = True, inplace = True) 명령어를
 df.reset_index(drop=True, inplace=True) 명령어로 변경하여
 inplace 인수를 True로 지정하여 인덱스를 재배열합니다.
-------------------------------------------------------------------------
'''
